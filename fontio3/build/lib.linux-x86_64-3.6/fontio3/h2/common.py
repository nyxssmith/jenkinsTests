#
# common.py
#
# Copyright Â© 2005-2016 Monotype Imaging Inc. All Rights Reserved.
#

"""
Common constants (like opcode names) used throughout the hints package.
"""

# -----------------------------------------------------------------------------

#
# Constants
#

rawOpcodeToNameMap = {
    0x00: "SVTCA[Y]",
    0x01: "SVTCA[X]",
    0x02: "SPVTCA[Y]",
    0x03: "SPVTCA[X]",
    0x04: "SFVTCA[Y]",
    0x05: "SFVTCA[X]",
    0x06: "SPVTL[r]",
    0x07: "SPVTL[R]",
    0x08: "SFVTL[r]",
    0x09: "SFVTL[R]",
    0x0A: "SPVFS[]",
    0x0B: "SFVFS[]",
    0x0C: "GPV[]",
    0x0D: "GFV[]",
    0x0E: "SFVTPV[]",
    0x0F: "ISECT[]",
    0x10: "SRP0[]",
    0x11: "SRP1[]",
    0x12: "SRP2[]",
    0x13: "SZP0[]",
    0x14: "SZP1[]",
    0x15: "SZP2[]",
    0x16: "SZPS[]",
    0x17: "SLOOP[]",
    0x18: "RTG[]",
    0x19: "RTHG[]",
    0x1A: "SMD[]",
    0x1B: "ELSE[]",
    0x1C: "JMPR[]",
    0x1D: "SCVTCI[]",
    0x1E: "SSWCI[]",
    0x1F: "SSW[]",
    0x20: "DUP[]",
    0x21: "POP[]",
    0x22: "CLEAR[]",
    0x23: "SWAP[]",
    0x24: "DEPTH[]",
    0x25: "CINDEX[]",
    0x26: "MINDEX[]",
    0x27: "ALIGNPTS[]",
    0x28: "RAW[]",
    0x29: "UTP[]",
    0x2A: "LOOPCALL[]",
    0x2B: "CALL[]",
    0x2C: "FDEF[]",
    0x2D: "ENDF[]",
    0x2E: "MDAP[r]",
    0x2F: "MDAP[R]",
    0x30: "IUP[Y]",
    0x31: "IUP[X]",
    0x32: "SHP[2]",
    0x33: "SHP[1]",
    0x34: "SHC[2]",
    0x35: "SHC[1]",
    0x36: "SHZ[2]",
    0x37: "SHZ[1]",
    0x38: "SHPIX[]",
    0x39: "IP[]",
    0x3A: "MSIRP[m]",
    0x3B: "MSIRP[M]",
    0x3C: "ALIGNRP[]",
    0x3D: "RTDG[]",
    0x3E: "MIAP[r]",
    0x3F: "MIAP[R]",
    0x40: "NPUSHB[]",
    0x41: "NPUSHW[]",
    0x42: "WS[]",
    0x43: "RS[]",
    0x44: "WCVTP[]",
    0x45: "RCVT[]",
    0x46: "GC[N]",
    0x47: "GC[O]",
    0x48: "SCFS[]",
    0x49: "MD[N]",
    0x4A: "MD[O]",
    0x4B: "MPPEM[]",
    0x4C: "MPS[]",
    0x4D: "FLIPON[]",
    0x4E: "FLIPOFF[]",
    0x4F: "DEBUG[]",
    0x50: "LT[]",
    0x51: "LTEQ[]",
    0x52: "GT[]",
    0x53: "GTEQ[]",
    0x54: "EQ[]",
    0x55: "NEQ[]",
    0x56: "ODD[]",
    0x57: "EVEN[]",
    0x58: "IF[]",
    0x59: "EIF[]",
    0x5A: "AND[]",
    0x5B: "OR[]",
    0x5C: "NOT[]",
    0x5D: "DELTAP1[]",
    0x5E: "SDB[]",
    0x5F: "SDS[]",
    0x60: "ADD[]",
    0x61: "SUB[]",
    0x62: "DIV[]",
    0x63: "MUL[]",
    0x64: "ABS[]",
    0x65: "NEG[]",
    0x66: "FLOOR[]",
    0x67: "CEILING[]",
    0x68: "ROUND[Gr]",
    0x69: "ROUND[Bl]",
    0x6A: "ROUND[Wh]",
    0x6B: "ROUND[??]",
    0x6C: "NROUND[Gr]",
    0x6D: "NROUND[Bl]",
    0x6E: "NROUND[Wh]",
    0x6F: "NROUND[??]",
    0x70: "WCVTF[]",
    0x71: "DELTAP2[]",
    0x72: "DELTAP3[]",
    0x73: "DELTAC1[]",
    0x74: "DELTAC2[]",
    0x75: "DELTAC3[]",
    0x76: "SROUND[]",
    0x77: "S45ROUND[]",
    0x78: "JROT[]",
    0x79: "JROF[]",
    0x7A: "ROFF[]",
    0x7C: "RUTG[]",
    0x7D: "RDTG[]",
    0x7E: "SANGW[]",
    0x7F: "AA[]",
    0x80: "FLIPPT[]",
    0x81: "FLIPRGON[]",
    0x82: "FLIPRGOFF[]",
    0x85: "SCANCTRL[]",
    0x86: "SDPVTL[r]",
    0x87: "SDPVTL[R]",
    0x88: "GETINFO[]",
    0x89: "IDEF[]",
    0x8A: "ROLL[]",
    0x8B: "MAX[]",
    0x8C: "MIN[]",
    0x8D: "SCANTYPE[]",
    0x8E: "INSTCTRL[]",
    0x8F: "ADJUST[0]",
    0x90: "ADJUST[1]",
    0xA2: "MAZDELTA1[]",
    0xA3: "MAZDELTA2[]",
    0xA4: "MAZDELTA3[]",
    0xA5: "MAZMODE[]",
    0xA6: "MAZSTROKE[]",
    0xA7: "DELTAK1[]",
    0xA8: "DELTAK2[]",
    0xA9: "DELTAK3[]",
    0xAA: "DELTAL1[]",
    0xAB: "DELTAL2[]",
    0xAC: "DELTAL3[]",
    0xAD: "DELTAS1[]",
    0xAE: "DELTAS2[]",
    0xAF: "DELTAS3[]",
    0xB0: "PUSHB[1]",
    0xB1: "PUSHB[2]",
    0xB2: "PUSHB[3]",
    0xB3: "PUSHB[4]",
    0xB4: "PUSHB[5]",
    0xB5: "PUSHB[6]",
    0xB6: "PUSHB[7]",
    0xB7: "PUSHB[8]",
    0xB8: "PUSHW[1]",
    0xB9: "PUSHW[2]",
    0xBA: "PUSHW[3]",
    0xBB: "PUSHW[4]",
    0xBC: "PUSHW[5]",
    0xBD: "PUSHW[6]",
    0xBE: "PUSHW[7]",
    0xBF: "PUSHW[8]",
    0xC0: "MDRP[m<rGr]",
    0xC1: "MDRP[m<rBl]",
    0xC2: "MDRP[m<rWh]",
    0xC3: "MDRP[m<r??]",
    0xC4: "MDRP[m<RGr]",
    0xC5: "MDRP[m<RBl]",
    0xC6: "MDRP[m<RWh]",
    0xC7: "MDRP[m<R??]",
    0xC8: "MDRP[m>rGr]",
    0xC9: "MDRP[m>rBl]",
    0xCA: "MDRP[m>rWh]",
    0xCB: "MDRP[m>r??]",
    0xCC: "MDRP[m>RGr]",
    0xCD: "MDRP[m>RBl]",
    0xCE: "MDRP[m>RWh]",
    0xCF: "MDRP[m>R??]",
    0xD0: "MDRP[M<rGr]",
    0xD1: "MDRP[M<rBl]",
    0xD2: "MDRP[M<rWh]",
    0xD3: "MDRP[M<r??]",
    0xD4: "MDRP[M<RGr]",
    0xD5: "MDRP[M<RBl]",
    0xD6: "MDRP[M<RWh]",
    0xD7: "MDRP[M<R??]",
    0xD8: "MDRP[M>rGr]",
    0xD9: "MDRP[M>rBl]",
    0xDA: "MDRP[M>rWh]",
    0xDB: "MDRP[M>r??]",
    0xDC: "MDRP[M>RBl]",
    0xDD: "MDRP[M>RGr]",
    0xDE: "MDRP[M>RWh]",
    0xDF: "MDRP[M>R??]",
    0xE0: "MIRP[m<rGr]",
    0xE1: "MIRP[m<rBl]",
    0xE2: "MIRP[m<rWh]",
    0xE3: "MIRP[m<r??]",
    0xE4: "MIRP[m<RGr]",
    0xE5: "MIRP[m<RBl]",
    0xE6: "MIRP[m<RWh]",
    0xE7: "MIRP[m<R??]",
    0xE8: "MIRP[m>rGr]",
    0xE9: "MIRP[m>rBl]",
    0xEA: "MIRP[m>rWh]",
    0xEB: "MIRP[m>r??]",
    0xEC: "MIRP[m>RGr]",
    0xED: "MIRP[m>RBl]",
    0xEE: "MIRP[m>RWh]",
    0xEF: "MIRP[m>R??]",
    0xF0: "MIRP[M<rGr]",
    0xF1: "MIRP[M<rBl]",
    0xF2: "MIRP[M<rWh]",
    0xF3: "MIRP[M<r??]",
    0xF4: "MIRP[M<RGr]",
    0xF5: "MIRP[M<RBl]",
    0xF6: "MIRP[M<RWh]",
    0xF7: "MIRP[M<R??]",
    0xF8: "MIRP[M>rGr]",
    0xF9: "MIRP[M>rBl]",
    0xFA: "MIRP[M>rWh]",
    0xFB: "MIRP[M>r??]",
    0xFC: "MIRP[M>RBl]",
    0xFD: "MIRP[M>RGr]",
    0xFE: "MIRP[M>RWh]",
    0xFF: "MIRP[M>R??]"}

# -----------------------------------------------------------------------------

#
# Test code
#

if 0:
    def __________________(): pass

def _test():
    import doctest
    doctest.testmod()

if __name__ == "__main__":
    _test()

